Básicos del Lenguaje

    Guía de instalación y conceptos básicos
        - https://www.python.org/downloads/
        - https://brew.sh/
        - https://www.python.org/dev/peps/pep-0008/

    Tipos de datos
        - Enteros (int)
        - Booleanos (bool)
        - Cadenas (str)
        - Listas
        - Diccionarios
        - Tuplas

    Funciones
        - def nombre_de_la_función(parametros)

    Operadores Comunes
        - sorted
        - dir(Variable)
        - help(sorted) 

    Docs
        - https://drive.google.com/file/d/1uAC0egE_U6571mV8gHtHq5ahIbo9vd1e/view?usp=sharing
        - https://github.com/platzi/curso_Python3/branches    

    ¿Qué es la programación?
        - Es una disciplina que combina parte de otras disciplinas como las Matemáticas, Ingeniería y la Ciencia. Sin embargo, la habilidad más importante es resolver problemas. Es lo que harás todos los días como programador o programadora.

    ¿Por qué programar con Python?
        - Python es uno de los mejores lenguajes para principiantes porque tiene una sintaxis clara, una gran comunidad y esto hace que el lenguaje sea muy amigable para los que están iniciando.

    Operadores matemáticos
        //: Es división de entero, básicamente tiramos la parte decimal
        %: Es el residuo de la división, lo que te sobra.
        **: Exponente

    Variables y expresiones
        - Una variable es simplemente el contenedor de un valor.
        - Reglas de Variables:
            Pueden contener números y letras
            No deben comenzar con número
            Múltiples palabras se unen con _
            No se pueden utilizar palabras reservadas    

    Funciones 
        En el contexto de la programación las funciones son simplemente una agrupación de enunciados(statments) que tienen un nombre. 

    Operadores lógicos
        - https://platzi.com/clases/discretas/

Uso de strings y ciclos

    Strings en Python   
        - id(variable) => Valor en memoria

    Operaciones con Strings en Python
        - upper: convierte todo el string a mayúsculas
        - lower: convierte todo el string a minúsculas
        - find: encuentra el indice en donde existe un patrón que nosotros definimos
        - startswith: significa que empieza con algún patrón.
        - endswith: significa que termina con algún patrón
        - capitalize: coloca la primera letra en mayúscula y el resto en minúscula
        - dir(variable) => Todas las build functions que podemos hacer sobre la variable
        - """ documentacion """ -> help(function)

    Operaciones con strings: Slices en python
        - Slices en español significa ““rebanada””
        - secuencia[comienzo:final:pasos]    
        
    For loops
        - Tienen dos keywords break y continue que nos permiten salir anticipadamente de la iteración
        - Se usan cuando se quiere ejecutar varias veces una o varias instrucciones.
        - for [variable] in [secuencia]:

    While loops
        - Al igual que las for loops, las while loops nos sirve para iterar, pero las for loops nos sirve para iterar a lo largo de una secuencia mientras que las while loops nos sirve para iterar mientras una condición sea verdadera.

    Iterators and generators
        - Uso de yield

Estructuras de Datos

    Uso de listas
        - Las listas son una secuencia de valores. 
        - import copy -> new_list = copy.copy(list)

    Operaciones con listas
        - append nos permite añadir elementos a listas. Cambia el tamaño de la lista.
        - pop nos permite sacar el último elemento de la lista. También recibe un índice y esto nos permite elegir qué elemento queremos eliminar.
        - sort modifica la propia lista y ordenarla de mayor a menor. Existe otro método llamado sorted, que también ordena la lista, pero genera una nueva instancia de la lista
        - del nos permite eliminar elementos vía indices, funciona con slices
        - remove nos permite es pasarle un valor para que Python compare internamente los valores y determina cuál de ellos hace match o son iguales para eliminarlos.

    Agregando listas a nuestro proyecto
        - 

    Diccionarios
        - Si queremos ciclar a lo largo de un diccionario tenemos las opciones:
            keys: nos imprime una lista de las llaves
            values nos imprime una lista de los valores
            items. nos manda una lista de tuplas de los valores
        - dict.get('keyName', None)  -> Evitar KeyError

    Agregando diccionarios a nuestro proyecto
        -      

    Tuplas
        - Tuplas(tuples) son iguales a las listas, la única diferencia es que son inmutables.
        - Metodos
            - count: Numero de veces que aparece un elemento
            - index: Indice donde se encuentra el elemento
        
    Conjuntos    
        - Los sets se pueden inicializar con la función set. Una recomendación es inicializarlos con esta función para no causar confusión con los diccionarios.
            * add nos sirve añadir elementos.
            * remove nos permite eliminar elementos.
        - Son mutables

    Tuplas y conjuntos en código    
        - 

    Introducción al módulo collections
        - collections.UserDict
        - collections.UserList
        - collections.UserString    
        - collections.NamedTuple

    Python comprehensions
        - Las Comprehensions son constructos que nos permiten generar una secuencia a partir de otra secuencia.
        - Existen tres tipos de comprehensions:
            - List comprehensions
            - Dictionary comprehensions
            - Sets comprehensions

    Búsquedas binarias
        - Búsqueda binaria lo único que hace es tratar de encontrar un resultado en una lista ordenada de tal manera que podamos razonar. Si tenemos un elemento mayor que otro, podemos simplemente usar la mitad de la lista cada vez.    

    Continuando con las Búsquedas Binarias
        -      

    Manipulación de archivos en Python 3
        - function open 
            - mode = read or write
        - module csv 
            - csv.reader y csv.writer

Uso de objetos y módulos

    Decoradores
        - Los decoradores son una función que envuelve a otra función para modificar o extender su comportamiento.

    Decoradores en Python
        - Para usar los decoradores es con el símbolo de @(arroba) y lo colocamos por encima de la función. Es un sugar syntax
        - [args wargs] son los argumentos que tienen keywords   

    ¿Qué es la programación orientada a objetos?
        - La programación orientada a objetos es un paradigma de programación que otorga los medios para estructurar programas de tal manera que las propiedades y comportamientos estén envueltos en objetos individuales.

        - Para poder entender cómo modelar estos objetos tenemos que tener claros cuatro principios:
            - Encapsulamiento
            - Abstracción
            - Herencia
            - Polimorfismo

    Programación orientada a objetos en Python
        - Para declarar una clase en Python utilizamos la keyword class
        - Un método fundamental es dunder init(__init__). Lo único que hace es inicializar la clase basado en los parámetros que le damos al momento de construir la clase.
        - self es una referencia a la clase. Es una forma internamente para que podamos acceder a las propiedades y métodos.

    Scopes and namespaces
        - un namespace es simplemente un conjunto de names.
        - Scope es la parte del programa en el que podemos tener acceso a un namespace sin necesidad de prefijos.
        - En cualquier momento determinado, el programa tiene acceso a tres scopes:
            - El scope dentro de una función (que tiene nombres locales)
            - El scope del módulo (que tiene nombres globales)
            - El scope raíz (que tiene los built-in names)
        - Para poder manipular una variable que se encuentra fuera del scope local podemos utilizar los keywords global y nonlocal.

    Introducción a Click
        - Click es un pequeño framework que nos permite crear aplicaciones de Línea de comandos. Tiene cuatro decoradores básicos:
            - @click_group: Agrupa una serie de comandos
            - @click_command: Aca definiremos todos los comandos de nuestra apliacion
            - @click_argument: Son parámetros necesarios
            - @click_option: Son parámetros opcionales
            